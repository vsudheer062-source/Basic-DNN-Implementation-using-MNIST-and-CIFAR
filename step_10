# Cell 10: Model Comparison and Advanced Analysis
def compare_models_performance():
    """
    Compare performance between different models and datasets
    """
    print(f"\n{'='*60}")
    print("MODEL PERFORMANCE COMPARISON")
    print(f"{'='*60}")
    
    # Create comparison data
    comparison_data = {
        'Model': ['Basic DNN (MNIST)', 'CNN (CIFAR-10)'],
        'Dataset': ['MNIST', 'CIFAR-10'],
        'Accuracy': [mnist_results['accuracy'], cifar10_results['accuracy']],
        'Final Loss': [mnist_results['loss'], cifar10_results['loss']],
        'Parameters': [
            sum(p.numel() for p in mnist_model.parameters()),
            sum(p.numel() for p in cifar10_model.parameters())
        ]
    }
    
    # Display comparison table
    print(f"{'Model':<20} {'Dataset':<10} {'Accuracy (%)':<15} {'Loss':<10} {'Parameters':<15}")
    print("-" * 75)
    
    for i in range(len(comparison_data['Model'])):
        print(f"{comparison_data['Model'][i]:<20} "
              f"{comparison_data['Dataset'][i]:<10} "
              f"{comparison_data['Accuracy'][i]:<15.2f} "
              f"{comparison_data['Final Loss'][i]:<10.4f} "
              f"{comparison_data['Parameters'][i]:<15,}")
    
    # Plot comparison
    fig, axes = plt.subplots(1, 3, figsize=(18, 6))
    
    # Accuracy comparison
    axes[0].bar(comparison_data['Model'], comparison_data['Accuracy'], 
               color=['skyblue', 'lightcoral'])
    axes[0].set_title('Test Accuracy Comparison', fontsize=14)
    axes[0].set_ylabel('Accuracy (%)', fontsize=12)
    axes[0].set_ylim(0, 100)
    for i, v in enumerate(comparison_data['Accuracy']):
        axes[0].text(i, v + 1, f'{v:.2f}%', ha='center', fontweight='bold')
    
    # Loss comparison
    axes[1].bar(comparison_data['Model'], comparison_data['Final Loss'], 
               color=['lightgreen', 'orange'])
    axes[1].set_title('Test Loss Comparison', fontsize=14)
    axes[1].set_ylabel('Loss', fontsize=12)
    for i, v in enumerate(comparison_data['Final Loss']):
        axes[1].text(i, v + 0.01, f'{v:.4f}', ha='center', fontweight='bold')
    
    # Parameters comparison
    axes[2].bar(comparison_data['Model'], comparison_data['Parameters'], 
               color=['gold', 'plum'])
    axes[2].set_title('Model Parameters Comparison', fontsize=14)
    axes[2].set_ylabel('Number of Parameters', fontsize=12)
    for i, v in enumerate(comparison_data['Parameters']):
        axes[2].text(i, v + 10000, f'{v:,}', ha='center', fontweight='bold')
    
    plt.xticks(rotation=45, ha='right')
    plt.tight_layout()
    plt.show()

# Run comparison
compare_models_performance()
